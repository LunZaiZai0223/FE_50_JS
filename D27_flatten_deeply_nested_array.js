// 給定一個多維陣列 `arr` 和一個深度值 `n`，返回這個陣列的扁平化版本。多維陣列是一種可以包含整數或者其他多維陣列的遞歸式數據結構。

// 扁平化陣列指的是將原來陣列中的部分或全部子陣列移除，並用子陣列中的實際元素替代的結果。這種扁平化操作只會在當前嵌套深度小於 `n` 時執行。第一層陣列中元素的深度被視為 0。

// 範例
// 輸入:
// arr = [1, 2, 3, [4, 5, 6], [7, 8, [9, 10, 11], 12], [13, 14, 15]]
// n = 0

// 輸出:
// [1, 2, 3, [4, 5, 6], [7, 8, [9, 10, 11], 12], [13, 14, 15]]

// 解釋:
// 當傳入的深度值 n=0 時，會總是得到原始的陣列作為輸出結果。這是因為子陣列（0）的最小可能深度不小於 n=0。因此，不會有任何子陣列被扁平化。

/**
 * ans.1: 使用遞迴的方式處理。JavaScript 是單一執行緒的語言，維持 LIFO（後近先出）的執行順序。所以遇到陣列的情況就會持續執行，待完成後就會 return 值並且釋放記憶體。
 */
var flat = function (arr, n) {
	if (n === 0) {
		return arr
	}

	// 使用 reduce 將原先的陣列轉換
	return arr.reduce((acc, val) => {
		if (Array.isArray(val)) {
			const d = n - 1
			const temp = flat(val, d)

			acc.push(...temp)
		} else {
			acc.push(val)
		}

		return acc
	}, [])
};


/**
 * ans.2: 或者直接用 array.flat() 壓平陣列
 */
var flat = function (arr, n) {
	return arr.flat(n)
};